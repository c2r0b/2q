type Location {
  pathname: String
  search: String
  origin: String
  hash: String
  host: String
  hostname: String
  href: String
  port: Int
  protocol: String
}

type Section {
  id: ID!
  title: String!
}

type Query {
  location: Location
  selMovie: String
  sections(where: SectionWhere): [Section]
  hasTimetravelSupport: Boolean
}

input SectionWhere {
  title: String
}

type CreateInfo {
  nodesCreated: Int
}

type CreateResults {
  info: CreateInfo
}

type DeleteResults {
  nodesDeleted: Int
}

type Mutation {
  createSections(input: [SectionCreateInput]): CreateResults
  updateSections(where: SectionUpdateWhere, update: SectionUpdateInput): CreateResults
  deleteSections(where: SectionDeleteWhere): DeleteResults
  sendChatMessage(message: String!): String
}

input SectionCreateInput {
  id: ID!
  title: String!
  description: String!
}

input SectionUpdateWhere {
  id: ID!
}

input SectionDeleteWhere {
  id: ID!
}

input SectionUpdateInput {
  title: String!
}